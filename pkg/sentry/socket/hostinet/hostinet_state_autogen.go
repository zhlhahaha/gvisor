// automatically generated by stateify.

package hostinet

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (s *socketOpsCommon) StateTypeName() string {
	return "pkg/sentry/socket/hostinet.socketOpsCommon"
}

func (s *socketOpsCommon) StateFields() []string {
	return []string{
		"SendReceiveTimeout",
		"family",
		"stype",
		"protocol",
		"queue",
		"fd",
	}
}

func (s *socketOpsCommon) beforeSave() {}

func (s *socketOpsCommon) StateSave(stateSinkObject state.Sink) {
	s.beforeSave()
	stateSinkObject.Save(0, &s.SendReceiveTimeout)
	stateSinkObject.Save(1, &s.family)
	stateSinkObject.Save(2, &s.stype)
	stateSinkObject.Save(3, &s.protocol)
	stateSinkObject.Save(4, &s.queue)
	stateSinkObject.Save(5, &s.fd)
}

func (s *socketOpsCommon) afterLoad() {}

func (s *socketOpsCommon) StateLoad(stateSourceObject state.Source) {
	stateSourceObject.Load(0, &s.SendReceiveTimeout)
	stateSourceObject.Load(1, &s.family)
	stateSourceObject.Load(2, &s.stype)
	stateSourceObject.Load(3, &s.protocol)
	stateSourceObject.Load(4, &s.queue)
	stateSourceObject.Load(5, &s.fd)
}

func init() {
	state.Register((*socketOpsCommon)(nil))
}
