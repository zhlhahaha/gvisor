// automatically generated by stateify.

package hostinet

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *socketOpsCommon) StateTypeName() string {
	return "pkg/sentry/socket/hostinet.socketOpsCommon"
}

func (x *socketOpsCommon) StateFields() []string {
	return []string{
		"SendReceiveTimeout",
		"family",
		"stype",
		"protocol",
		"queue",
		"fd",
	}
}

func (x *socketOpsCommon) beforeSave() {}

func (x *socketOpsCommon) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.SendReceiveTimeout)
	m.Save(1, &x.family)
	m.Save(2, &x.stype)
	m.Save(3, &x.protocol)
	m.Save(4, &x.queue)
	m.Save(5, &x.fd)
}

func (x *socketOpsCommon) afterLoad() {}

func (x *socketOpsCommon) StateLoad(m state.Source) {
	m.Load(0, &x.SendReceiveTimeout)
	m.Load(1, &x.family)
	m.Load(2, &x.stype)
	m.Load(3, &x.protocol)
	m.Load(4, &x.queue)
	m.Load(5, &x.fd)
}

func init() {
	state.Register((*socketOpsCommon)(nil))
}
