// automatically generated by stateify.

package seqfile

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *SeqData) StateTypeName() string {
	return "pkg/sentry/fs/proc/seqfile.SeqData"
}

func (x *SeqData) StateFields() []string {
	return []string{
		"Buf",
		"Handle",
	}
}

func (x *SeqData) beforeSave() {}

func (x *SeqData) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.Buf)
	m.Save(1, &x.Handle)
}

func (x *SeqData) afterLoad() {}

func (x *SeqData) StateLoad(m state.Source) {
	m.Load(0, &x.Buf)
	m.Load(1, &x.Handle)
}

func (x *SeqFile) StateTypeName() string {
	return "pkg/sentry/fs/proc/seqfile.SeqFile"
}

func (x *SeqFile) StateFields() []string {
	return []string{
		"InodeSimpleExtendedAttributes",
		"InodeSimpleAttributes",
		"SeqSource",
		"source",
		"generation",
		"lastRead",
	}
}

func (x *SeqFile) beforeSave() {}

func (x *SeqFile) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.InodeSimpleExtendedAttributes)
	m.Save(1, &x.InodeSimpleAttributes)
	m.Save(2, &x.SeqSource)
	m.Save(3, &x.source)
	m.Save(4, &x.generation)
	m.Save(5, &x.lastRead)
}

func (x *SeqFile) afterLoad() {}

func (x *SeqFile) StateLoad(m state.Source) {
	m.Load(0, &x.InodeSimpleExtendedAttributes)
	m.Load(1, &x.InodeSimpleAttributes)
	m.Load(2, &x.SeqSource)
	m.Load(3, &x.source)
	m.Load(4, &x.generation)
	m.Load(5, &x.lastRead)
}

func (x *seqFileOperations) StateTypeName() string {
	return "pkg/sentry/fs/proc/seqfile.seqFileOperations"
}

func (x *seqFileOperations) StateFields() []string {
	return []string{
		"seqFile",
	}
}

func (x *seqFileOperations) beforeSave() {}

func (x *seqFileOperations) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.seqFile)
}

func (x *seqFileOperations) afterLoad() {}

func (x *seqFileOperations) StateLoad(m state.Source) {
	m.Load(0, &x.seqFile)
}

func init() {
	state.Register((*SeqData)(nil))
	state.Register((*SeqFile)(nil))
	state.Register((*seqFileOperations)(nil))
}
