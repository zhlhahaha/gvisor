// automatically generated by stateify.

package sys

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (c *cpunum) StateTypeName() string {
	return "pkg/sentry/fs/sys.cpunum"
}

func (c *cpunum) StateFields() []string {
	return []string{
		"InodeSimpleAttributes",
		"InodeStaticFileGetter",
	}
}

func (c *cpunum) beforeSave() {}

func (c *cpunum) StateSave(stateSinkObject state.Sink) {
	c.beforeSave()
	stateSinkObject.Save(0, &c.InodeSimpleAttributes)
	stateSinkObject.Save(1, &c.InodeStaticFileGetter)
}

func (c *cpunum) afterLoad() {}

func (c *cpunum) StateLoad(stateSourceObject state.Source) {
	stateSourceObject.Load(0, &c.InodeSimpleAttributes)
	stateSourceObject.Load(1, &c.InodeStaticFileGetter)
}

func (f *filesystem) StateTypeName() string {
	return "pkg/sentry/fs/sys.filesystem"
}

func (f *filesystem) StateFields() []string {
	return []string{}
}

func (f *filesystem) beforeSave() {}

func (f *filesystem) StateSave(stateSinkObject state.Sink) {
	f.beforeSave()
}

func (f *filesystem) afterLoad() {}

func (f *filesystem) StateLoad(stateSourceObject state.Source) {
}

func init() {
	state.Register((*cpunum)(nil))
	state.Register((*filesystem)(nil))
}
