// automatically generated by stateify.

package sys

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *cpunum) StateTypeName() string {
	return "pkg/sentry/fs/sys.cpunum"
}

func (x *cpunum) StateFields() []string {
	return []string{
		"InodeSimpleAttributes",
		"InodeStaticFileGetter",
	}
}

func (x *cpunum) beforeSave() {}

func (x *cpunum) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.InodeSimpleAttributes)
	m.Save(1, &x.InodeStaticFileGetter)
}

func (x *cpunum) afterLoad() {}

func (x *cpunum) StateLoad(m state.Source) {
	m.Load(0, &x.InodeSimpleAttributes)
	m.Load(1, &x.InodeStaticFileGetter)
}

func (x *filesystem) StateTypeName() string {
	return "pkg/sentry/fs/sys.filesystem"
}

func (x *filesystem) StateFields() []string {
	return []string{}
}

func (x *filesystem) beforeSave() {}

func (x *filesystem) StateSave(m state.Sink) {
	x.beforeSave()
}

func (x *filesystem) afterLoad() {}

func (x *filesystem) StateLoad(m state.Source) {
}

func init() {
	state.Register((*cpunum)(nil))
	state.Register((*filesystem)(nil))
}
