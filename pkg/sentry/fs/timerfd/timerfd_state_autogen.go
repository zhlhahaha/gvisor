// automatically generated by stateify.

package timerfd

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *TimerOperations) StateTypeName() string {
	return "pkg/sentry/fs/timerfd.TimerOperations"
}

func (x *TimerOperations) StateFields() []string {
	return []string{
		"timer",
		"val",
	}
}

func (x *TimerOperations) beforeSave() {}

func (x *TimerOperations) StateSave(m state.Sink) {
	x.beforeSave()
	if !state.IsZeroValue(&x.events) {
		state.Failf("events is %#v, expected zero", &x.events)
	}
	m.Save(0, &x.timer)
	m.Save(1, &x.val)
}

func (x *TimerOperations) afterLoad() {}

func (x *TimerOperations) StateLoad(m state.Source) {
	m.Load(0, &x.timer)
	m.Load(1, &x.val)
}

func init() {
	state.Register((*TimerOperations)(nil))
}
