// automatically generated by stateify.

package limits

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *Limit) StateTypeName() string {
	return "pkg/sentry/limits.Limit"
}

func (x *Limit) StateFields() []string {
	return []string{
		"Cur",
		"Max",
	}
}

func (x *Limit) beforeSave() {}

func (x *Limit) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.Cur)
	m.Save(1, &x.Max)
}

func (x *Limit) afterLoad() {}

func (x *Limit) StateLoad(m state.Source) {
	m.Load(0, &x.Cur)
	m.Load(1, &x.Max)
}

func (x *LimitSet) StateTypeName() string {
	return "pkg/sentry/limits.LimitSet"
}

func (x *LimitSet) StateFields() []string {
	return []string{
		"data",
	}
}

func (x *LimitSet) beforeSave() {}

func (x *LimitSet) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.data)
}

func (x *LimitSet) afterLoad() {}

func (x *LimitSet) StateLoad(m state.Source) {
	m.Load(0, &x.data)
}

func init() {
	state.Register((*Limit)(nil))
	state.Register((*LimitSet)(nil))
}
