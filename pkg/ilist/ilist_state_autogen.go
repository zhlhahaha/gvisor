// automatically generated by stateify.

package ilist

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *List) StateTypeName() string {
	return "pkg/ilist.List"
}

func (x *List) StateFields() []string {
	return []string{
		"head",
		"tail",
	}
}

func (x *List) beforeSave() {}

func (x *List) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.head)
	m.Save(1, &x.tail)
}

func (x *List) afterLoad() {}

func (x *List) StateLoad(m state.Source) {
	m.Load(0, &x.head)
	m.Load(1, &x.tail)
}

func (x *Entry) StateTypeName() string {
	return "pkg/ilist.Entry"
}

func (x *Entry) StateFields() []string {
	return []string{
		"next",
		"prev",
	}
}

func (x *Entry) beforeSave() {}

func (x *Entry) StateSave(m state.Sink) {
	x.beforeSave()
	m.Save(0, &x.next)
	m.Save(1, &x.prev)
}

func (x *Entry) afterLoad() {}

func (x *Entry) StateLoad(m state.Source) {
	m.Load(0, &x.next)
	m.Load(1, &x.prev)
}

func init() {
	state.Register((*List)(nil))
	state.Register((*Entry)(nil))
}
